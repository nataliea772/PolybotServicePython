name: Polybot Build Prod

on:
  push:
    branches:
      - dev


jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.save-image.outputs.image }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image with curl
        run: |
          BASE_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/polybot-dev-base:${{ github.run_number }}
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/polybot-dev:${{ github.run_number }}
      
          echo "üîß Building base image (original)"
          docker build -t $BASE_IMAGE .
      
          echo "üîß Creating patched Dockerfile with curl"
          echo "FROM $BASE_IMAGE" > Dockerfile.patched
          echo "RUN apt-get update && apt-get install -y curl" >> Dockerfile.patched
      
          echo "üîß Building final image with curl: $IMAGE_NAME"
          docker build -t $IMAGE_NAME -f Dockerfile.patched .
      
          echo "üì§ Pushing final image to DockerHub"
          docker push $IMAGE_NAME
      
          echo "$IMAGE_NAME" > image_name.txt


      - name: Save image name as output
        id: save-image
        run: |
          IMAGE_NAME=$(cat image_name.txt)
          echo "image=$IMAGE_NAME" >> "$GITHUB_OUTPUT"
          echo "‚úÖ Saved image output: $IMAGE_NAME"

      - name: Upload image name as artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-name
          path: image_name.txt

      - name: Debug outputs
        run: |
          echo "üîç Step output: ${{ steps.save-image.outputs.image }}"
          echo "üîç File contents:"
          cat image_name.txt

  deploy:
    needs: build
    uses: ./.github/workflows/deployment-dev.yaml
    with:
      image: ${{ needs.build.outputs.image }}
    secrets:
      SSH_PRIVATE_KEY_PROD: ${{ secrets.SSH_PRIVATE_KEY_PROD }}
      PROD_POLYBOT_HOST: ${{ secrets.PROD_POLYBOT_HOST }}
      TELEGRAM_BOT_TOKEN_PROD: ${{ secrets.TELEGRAM_BOT_TOKEN_PROD }}
      BOT_APP_URL_PROD: ${{ secrets.BOT_APP_URL_PROD }}
      YOLO_SERVER_URL_PROD: ${{ secrets.YOLO_SERVER_URL_PROD }}
      S3_BUCKET_NAME_PROD: ${{ secrets.S3_BUCKET_NAME_PROD }}